<launch>
    <!-- Launches ELAS node, and rectification nodes for input --> 
    <!-- Arguments: input stereo namespace and output elas namespace -->


    <!-- <include file="$(find realsense2_camera)/launch/rs_camera.launch"/> -->
    <arg name="elas_ns" default="elas"/>

    <!-- <node pkg="sci_ros" type="sci_node.py" name="sci_node">
        <param name="sub_image_0" value='/infra1/image_rect_raw' />
        <param name="sub_image_1" value='/infra2/image_rect_raw' />    
        <param name="pub_image_0" value='/image_enhance_0' />
        <param name="pub_image_1" value='/image_enhance_1' />
        <param name="model_path" value="/home/sunteng/catkin_ws/src/sci_ros/ckpt/weights_122.pt"/>
    </node> -->

    <node name="publish_info_realsense" pkg="lively_slam" type="publish_info_realsense" output="screen">
    <param  name="left_topic" value="/camera/infra2/camera_info" type="str" />
    <param  name="right_topic" value="/camera/infra2/camera_info" type="str" />
    <param  name="img_topic" value="/camera/infra2/image_rect_raw" type="str" />
    
    </node>
    <!-- If you already have rectified camera images remove the image_proc nodes -->
    <!-- <group ns="/cam0">
        <node name="left_rect" pkg="image_proc" type="image_proc"/>
    </group>
    
    <group ns="/cam1">
        <node name="right_rect" pkg="image_proc" type="image_proc"/>
    </group> -->
    <!-- param.disp_min = 0;                                     // 最小视差	
	param.disp_max = 256;                                // 最大视差	
	param.support_threshold = 0.85;              // 比率测试：最低match VS 次低match
	param.support_texture = 10;                     // 支持点的最小纹理
	param.candidate_stepsize = 5;                  // 用于支持点的sobel特征匹配的邻域半径
	param.incon_window_size = 5;                  // 不连续性窗口的尺寸
	param.incon_threshold = 5;                       // 不连续性窗口内的视差范围阈值
	param.incon_min_support = 5;                 // 不连续性窗口内的最低支持点数量
	param.add_corners = true;                        // 是否添加角点
	param.grid_size = 20;                                  // 网格尺寸
	param.beta = 0.02;                                      // 图像相似性度量的参数
	param.gamma = 3;                                      // 先验概率常数
	param.sigma = 1;                                         // 先验概率的标准差
	param.sradius = 3;                                       // 标准差半径
	param.match_texture = 1;                         // 最低纹理
	param.lr_threshold = 1;                             // 左右一致性检验阈值
	param.speckle_sim_threshold = 1;          // 连通域判断阈值
	param.speckle_size = 200;                        // 连通域噪声尺寸判断阈值
	param.ipol_gap_width = 3;                       // 空洞宽
	param.filter_median = false;                     // 是否中值滤波
	param.filter_adaptive_mean = true;        // 是否自适应中值滤波
	param.postprocess_only_left = true;     // 是否只对左视差图后处理，设置为True可以节省时间
	param.subsampling = false;                     // 每个两个像素进行视差计算，设置为True可以节省时间，但是传入的D1和D2的分辨率必须为(w/2) x (h/2)-->
    <!-- This node actually does the stereo reconstruction -->
    <node name="$(arg elas_ns)" pkg="elas_ros" type="elas_ros" output="screen">

        <param name="image_0"  type="string"  value="/camera/infra1/image_rect_raw" />
        <param name="image_1"  type="string"  value="/camera/infra2/image_rect_raw"/>
        <param name="image_info_0"  type="string" value="/camera/infra1/camera_info" />
        <param name="image_info_1" type="string" value="/camera/infra2/camera_info" />
         <param name="disp_min" type="int" value="5"/>
        <param name="disp_max" type="int" value="255"/>
        <param name="support_threshold" type="double" value="0.85"/>
        <param name="support_texture" type="int" value="10"/>
        <param name="candidate_stepsize" type="int" value="5"/>
        <param name="incon_window_size" type="int" value="5"/>
        <param name="incon_threshold" type="int" value="5"/>
        <param name="incon_min_support" type="int" value="5"/>
        <param name="add_corners" type="bool" value="1"/>
        <param name="grid_size" type="int" value="20"/>
        <param name="beta" type="double" value="0.02"/>
        <param name="gamma" type="double" value="3"/>
        <param name="sigma" type="double" value="1"/>
        <param name="sradius" type="double" value="2"/>
        <param name="match_texture" type="int" value="1"/>
        <param name="lr_threshold" type="int" value="1"/>
        <param name="speckle_sim_threshold" type="double" value="1"/>
        <param name="speckle_size" type="int" value="200"/>
        <param name="ipol_gap_width" type="int" value="150"/>
        <param name="filter_median" type="bool" value="1"/>
        <param name="filter_adaptive_mean" type="bool" value="1"/>
        <param name="postprocess_only_left" type="bool" value="0"/>
        <param name="subsampling" type="bool" value="1"/>
        <param name="publish_gray_pc" type="bool" value="1"/>
        <param name="publish_color_pc" type="bool" value="1"/>
        <param name="publish_depth" type="bool" value="1"/>
        <param name="publish_segment" type="bool" value="1" />
        <!-- If your cameras are not synchronised then uncomment the following line -->
        <!-- <param name="approximate_sync" value="true" type="bool"/> -->

    </node>

    <node  pkg="rviz" type="rviz" name="elas_vis" required="true" args="-d $(find elas_ros)/rviz/show_enhance.rviz"/>
</launch>
